
CM Console for VM Management
============================

Preparing on IPython
--------------------

With the alias command we simply define a new command with the name cm
that we can call directly from IPython. Here we make sure that the
parameters are between "" so that they are properly set. Just execute
the following line

.. code:: python

    alias cm cm %s
Get Flavors
-----------

Available flavors can be listed with the following command.

.. code:: python

    cm list flavor india

.. parsed-literal::

    +------+-----------+---------+-------+--------+----------------------+
    |   id | name      |   vcpus |   ram |   disk | refresh time         |
    +======+===========+=========+=======+========+======================+
    |    1 | m1.tiny   |       1 |   512 |      0 | 2014-09-15T01-09-56Z |
    +------+-----------+---------+-------+--------+----------------------+
    |    3 | m1.medium |       2 |  4096 |     40 | 2014-09-15T01-09-56Z |
    +------+-----------+---------+-------+--------+----------------------+
    |    2 | m1.small  |       1 |  2048 |     20 | 2014-09-15T01-09-56Z |
    +------+-----------+---------+-------+--------+----------------------+
    |    5 | m1.xlarge |       8 | 16384 |    160 | 2014-09-15T01-09-56Z |
    +------+-----------+---------+-------+--------+----------------------+
    |    4 | m1.large  |       4 |  8192 |     80 | 2014-09-15T01-09-56Z |
    +------+-----------+---------+-------+--------+----------------------+


refresh option updates the data from the IaaS cloud. The cached data in
the mongo database will be updated.

.. code:: python

    cm "list flavor india --refresh"
Start VM
--------

The ``vm start`` command provides a quick launch of a vm instance in
cloudmesh.

.. code:: python

    cm "vm start --cloud=india"
Delete VM
---------

If you know the id of the virtual machine that you want to destroy,
*delete* command in cloudmesh simply terminate the instance.

.. code:: python

    cm "vm delete [NAME] --cloud=india"
VM Images
---------

The ``list image`` command provides an available vm images on a selected
cloud.

.. code:: python

    cm "list image india --column=name,id,updated"

.. parsed-literal::

    +----------------------------------------------------+--------------------------------------+----------------------+
    | name                                               | id                                   | updated              |
    +====================================================+======================================+======================+
    | salsahpc/cloud-mooc-m1-large-4GB                   | 384ca88c-f674-4d3d-999f-353fc6915608 | 2013-12-27T01:09:19Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | CentOS6                                            | ad35042c-d242-4514-bde0-138718b5aa3e | 2014-04-29T05:06:40Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | SL64-blank-sparse10gb-C vmdk                       | f480f1e7-38af-4410-bc13-6a1e43bf58ba | 2014-02-05T16:57:37Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | fg7/rynge/centos6-v1                               | ac464f65-7175-44df-9e0e-34b1a32f8a2a | 2014-05-01T21:42:25Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | futuregrid/centos-6                                | 81b27cb5-4f8b-4583-afd4-1901053f6a28 | 2014-05-27T15:04:30Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | DaLiAna-vm2014e-geant4.10.vmdk Jan best            | f4f9821f-881b-433a-97ab-1ad87273c5fc | 2014-03-05T04:22:40Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | ubuntu-13.10                                       | cd844b12-f138-414a-8cd5-2c977f0a2379 | 2014-01-29T17:24:08Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | futuregrid/ubuntu-14.04                            | ba327564-5969-4309-b3f3-b67764038e66 | 2014-09-12T20:16:05Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | fg101/richieriee/my-ubuntu-01                      | 7915f335-d1a9-4380-a9f3-159eb67d721e | 2014-07-24T01:10:37Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | sl64-gluex-vm2014e-40gb.vmdk Justin                | f51fc1e4-d495-4376-824b-19000c41abef | 2014-03-13T17:21:09Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | futuregrid/fedora-19                               | 6e9322df-fcb2-4ac8-bd02-1d39c6f6919f | 2014-09-12T20:16:22Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | fg10/jcharcal/centos6.5_x86_64                     | 28f2ad75-8f42-4079-85e1-3d4fe986317f | 2014-03-12T13:50:20Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | balewski/kernel-2.6.32-431.5.1-sl65                | 00e935c3-82a6-499c-9056-6db37d27439b | 2014-03-10T01:56:13Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | snapshot 1                                         | adc6b8d0-8fba-47ba-af20-f91cb84334cc | 2014-08-15T09:03:10Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | Ubuntu-12.04-blank2.vmdk                           | b49324f8-d2c3-413a-8f8c-83b498e815f6 | 2014-02-05T16:55:28Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | balewski/ramdisk-2.6.32-431.5.1-sl65               | 9589cf93-f0e6-45d8-930f-63dd2d9c2f1a | 2014-03-10T01:56:19Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | sl6_x64-qemu  french ?bad                          | c9ca9852-dfcb-4ceb-a164-a58c89594551 | 2014-02-01T21:59:26Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | balewski/sl6.5-blank-80gb-b works                  | 5cb90f55-c3a1-468b-b60a-0ecd589baf31 | 2014-03-10T15:48:27Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | futuregrid/ubuntu-12.04                            | 9cd8cc0d-96cd-44b8-a307-8b574c899ef4 | 2014-09-12T20:16:01Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | ndssl-vt/ubuntu-12.04-small                        | b9455041-407b-488b-a3f1-5dce6c480b5a | 2013-12-05T22:02:57Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | futuregrid/fedora-20                               | 68a5d085-ea4d-42c4-800f-2017309989ae | 2014-09-12T20:15:43Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | SL64-blank-sparse40GB vmdk                         | 882871a5-3157-426a-b7bc-10cca91860f0 | 2014-02-05T16:57:23Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | cglmoocs/ipython                                   | 0eff8bfc-e455-429e-9dfb-e16488d410f9 | 2014-01-06T16:18:54Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | balewski/daliana-vm2014e2-sl6.5-geant4.10-root5.34 | 64866d96-8a9e-4d7c-983f-90b0bb594310 | 2014-03-10T02:05:55Z |
    +----------------------------------------------------+--------------------------------------+----------------------+
    | DaLiAna-vm2014d-SL64-A.vmdk                        | ff5bb4de-d7e9-4bfb-b42b-cec9ed8d2d08 | 2014-02-03T16:04:12Z |
    +----------------------------------------------------+--------------------------------------+----------------------+


Set a default flavor or image
-----------------------------

Each cloud must have a default image and a default flavor to launch vm
instances in a simple step. The ``cloud set`` command provides a way to
set default values for an image or a flavor.

.. code:: python

    cm "cloud set flavor india --flavor=m1.small"
.. code:: python

    cm "cloud set image india --image=futuregrid/ubuntu-14.04"
More options to launch a VM instance
------------------------------------

When you create a new VM instance, you can also choose multiple options
such as a flavor, an image, or a key associated with the instance. The
``vm start`` command accepts optional parameters as a user input of
these options. To see a brief description of the command, try
``cm "vm --help"`` in the IPython Notebook cell.

Available options are:

-  --cloud= give a cloud to work on, if not given, selected or default
   cloud will be used
-  --count= give the number of servers to start
-  --flavor= give the name of the flavor
-  --flavorid= give the id of the flavor
-  --group= give the group name of server
-  --id= give the server id
-  --image= give the name of the image
-  --imageid= give the id of the image
-  --prefix= give the prefix of the server, standand server name is in
   the form of prefix\_index, e.g. abc\_9
-  --range= give the range of the index of the servers to delete, e.g.
   --range=3,6. standand server name is in the form of prefix\_index,
   e.g. abc\_9
-  --force delete vms without user's confirmation

.. code:: python

    cm "vm start --cloud=india --flavor=m1.medium --image=futuregrid/ubuntu-12.04"
Vitual Machine Name
-------------------

.. code:: python

    cm label

.. parsed-literal::

    prefix:  brian
    index:  32
    next VM name: brian_32


Activating Clouds
-----------------

In order for cloudmesh to work with multiple coulds, we need to find out
first which clouds are available. Users can add their own clouds later
which we describe in the registration section.

Let us inspect what is already available by invoking the list command

.. code:: python

    cm cloud list

.. parsed-literal::

    +-------------------+--------+
    | cloud             | active |
    +-------------------+--------+
    | alamo             | True   |
    | aws               |        |
    | azure             |        |
    | dreamhost         |        |
    | hp                |        |
    | hp_east           |        |
    | india             | True   |
    | india_eucalyptus  |        |
    | sierra            | True   |
    | sierra_eucalyptus |        |
    +-------------------+--------+


As you see we have a number of clouds, but none of them is already
active. Thus we need to first activate a cloud. We assume that you have
an account on FutureGrid. Let us activate the cloud india

.. code:: python

    cm cloud on india
We also have a conveniet interactive selector to select a cloud to work
with, that however does not work with ipython

::

    "cloud select"

or you may also input "cloud select india" to select a specific cloud
india

To check if the cloud was activated, simply use the list command again

.. code:: python

    cm cloud list
Starting VMs
------------

Now let us see how to start VMs on a cloud, here is how to start a VM on
cloud india

.. code:: python

    cm "vm start --cloud=india --image=futuregrid/ubuntu-14.04 --flavor=m1.small"
You may don't know what images or flavors are available on the cloud, or
you don't want to type a long command every time you start a VM, things
can get a lot easier by performing some setting up...

set default image
~~~~~~~~~~~~~~~~~

You can invoke command "cloud set image india" to set a image
interactively, however this does not work with ipython. Then we can use
the following commands to get a list of images first and set default
image by giving its image name or image id

.. code:: python

    cm "list image india --refresh"
.. code:: python

    cm "cloud set image india --image=futuregrid/ubuntu-14.04"
set default flavor
~~~~~~~~~~~~~~~~~~

Similar as setting default image, to set up default flavor
interactively, "cloud set flavor india", otherwise you may get a list of
flavors then set by giving flavor name or flavor id

.. code:: python

    cm "list flavor india --refresh"
.. code:: python

    cm "cloud set flavor india --flavorid=2"
set default cloud
~~~~~~~~~~~~~~~~~

If you want to make things even more convenient, you can set a default
cloud or select a cloud to work with so that you don't have to type in a
cloud everytime you need to specify a cloud, to set india as default
cloud

.. code:: python

    cm "cloud set default india"
to select a cloud

.. code:: python

    cm "cloud select india"
You can see a selected cloud as a temporarily default cloud to work
with.

For more details of using command cloud to set up a cloud

.. code:: python

    cm "cloud -h"
simple way to start a VM
~~~~~~~~~~~~~~~~~~~~~~~~

After all setting up above, now you can start a VM simply by typing in

.. code:: python

    cm "vm start"
set default VM name
~~~~~~~~~~~~~~~~~~~

If the user doesn't provide a name while starting VMs, cloudmesh will
generate labels for them. The default form to name VMs is prefix\_index,
where prefix is a string and index is an non-negative integer. If a
index is used, the index value will be automatically added by one
waiting to be used for next VM. To check your current prefix and index

.. code:: python

    cm "label"
To change the prefix and/or reset index(e.g. to abc and 3)

.. code:: python

    cm "label --prefix=Brain --id=3"
Refreshing VM status
--------------------

After you have started or deleted VMs, you may want to check clouds' VMs
status. To refresh cloud india's VMs information

.. code:: python

    cm "list vm india --refresh"
Starting multiple VMs
---------------------

Sometimes we want to start more than one VM at the same time, we can
choose the option --count=int where int is the number of VMs you want to
start. For example, to start 5 VMs on india

.. code:: python

    cm "vm start --cloud=india --count=5"
Deleting VMs
------------

To delete one VM is easy, what if we want to delete 1000 VMs, we need a
more convenient way to do it. Cloudmesh shell provides several methods
to find the VMs and delete them, you may think there are two phases of
VM deletion, searching and deleting. Here are some examples:

to delete all VMs of cloud india

.. code:: python

    cm "vm delete --cloud=india --force"
Note here we use the option "--force", without it the shell will give
you a list of VMs to delete and ask for your confirmation.

to delete a VM by giving its name (you may always provide a cloud unless
you have specified a default cloud or have selected a cloud)

.. code:: python

    cm "vm delete --cloud=india Brain_2 --force"
to delete a VM by group

.. code:: python

    cm "vm delete --cloud=india --goup=testgroup --force"
We can also narrow the search result by giving more search conditions.
For example, to delete VMs of cloud india that they are also in the
group 'testgroup' and they have the prefix name 'abc' and their indices'
range is no greater than 100

.. code:: python

    cm "vm delete --cloud=india --goup=testgroup --prefix=abc --range=,100 --force"
For more details for command vm

.. code:: python

    cm "vm -h"