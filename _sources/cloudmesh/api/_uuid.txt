
Defining Names
==============

Often we need to define some unique names to distinguish virtual
machines or other objects that we use as part of our programming.
Besisdes uuid that is provided by python, cloudmesh has additional
functions that simplify name generation.

UUIDs
-----

UUIDs are provided as part of the python standard libraries. There are a
number of different initializations and which to use depends on your
needs.

.. code:: python

    import uuid
Machine dependent uuid
----------------------

One of them is to create UUIDs dependent on your machine name with
uuid1.

.. code:: python

    uuid.uuid1()



.. parsed-literal::

    UUID('cb40b7ae-43f5-11e4-b2f5-600308a5f9d2')



Random Uuid
-----------

uuid4 creates random uuids.

.. code:: python

    uuid.uuid4()



.. parsed-literal::

    UUID('41e3f670-c816-45cb-b74c-47f43c08a795')



As in some cases we want to generate names that do not include special
characters such as - or . we avoid using the uuid function for now and
use the function get\_unique\_name instaed.

.. code:: python

    uuid.UUID(bytes=uuid.uuid4().bytes)



.. parsed-literal::

    UUID('0ba9ce2e-8bb8-4503-9a4b-205c52d97c62')



.. code:: python

    uuid.uuid4().int



.. parsed-literal::

    82842630962728572160157755786553046L



Cloudmesh get\_unique\_name
---------------------------

Sometimes it is beneficial to create uuids without the - in it. For this
we have a convenience function in cloudmesh.

.. code:: python

    from cloudmesh_common.util import get_unique_name
.. code:: python

    print get_unique_name()

.. parsed-literal::

    d1915dde43f511e4b2ca600308a5f9d2


As you can see it is just like the uuid function (currently uuid1) with
the - removed.

In addition one can place a prefix into the uuid to make furher
distinctions. However this is rarely needed.

.. code:: python

    get_unique_name("gregor")



.. parsed-literal::

    'gregord3280fa843f511e4a176600308a5f9d2'



Generating VM names
-------------------

To create a name for a virtual machine we often recommend to use a
prefix with a number for an identifier of the virtual machine. This will
come in handy when we need to start multile virtual machines and
distinguish them with a different name. Cloudmesh uses internally by
using your username from the FutureGrid portal as defined in the
cloudmesh.yaml file.

.. code:: python

    import cloudmesh
.. code:: python

    print cloudmesh.vm_name("gregor", 1)

.. parsed-literal::

    gregor-00001


Getting the next vm name
------------------------

Here is how to get the next vm name by using Cloudmesh API, this method
gets the data from database. Before call vmname(), we need to get the
username and activate the user account.

.. code:: python

    mesh = cloudmesh.mesh("mongo")
.. code:: python

    username = cloudmesh.load().username()
.. code:: python

    mesh.activate(username)

.. parsed-literal::

    * india
    Refreshing gvonlasz servers india ->
    Refresh time: 0.290459156036
    Store time: 0.074816942215


.. code:: python

    mesh.vmname()



.. parsed-literal::

    u'gvonlasz_7'



